
import { GoogleGenAI, Type } from "@google/genai";
import { ParaphraseMode, EssayTone, EssayLength, SummaryLength, AiDetectionResult } from '../types';

if (!process.env.API_KEY) {
    throw new Error("API_KEY environment variable is not set.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

const model = 'gemini-2.5-flash';

const aiDetectionSchema = {
    type: Type.OBJECT,
    properties: {
        ai_probability: {
            type: Type.INTEGER,
            description: "A percentage score from 0 to 100 representing the likelihood the text is AI-generated.",
        },
        suspicious_sentences: {
            type: Type.ARRAY,
            items: {
                type: Type.STRING,
            },
            description: "A list of specific sentences from the text that appear to be AI-generated."
        },
    },
    required: ["ai_probability", "suspicious_sentences"],
};


export const paraphraseText = async (text: string, mode: ParaphraseMode): Promise<string> => {
    const prompt = `You are an expert writer. Paraphrase the following text in a "${mode}" mode.
    - Standard: Basic rewording for clarity.
    - Fluency: Improve readability and flow.
    - Creative: Use more original and imaginative language.
    - Formal: Adapt for an academic or professional tone.
    
    Original Text:
    ---
    ${text}
    ---
    
    Paraphrased Text:`;

    try {
        const response = await ai.models.generateContent({
            model,
            contents: prompt,
        });
        return response.text;
    } catch (error) {
        console.error("Error paraphrasing text:", error);
        throw new Error("Failed to paraphrase text. Please check the console for details.");
    }
};

export const detectAiContent = async (text: string): Promise<AiDetectionResult> => {
    const prompt = `Analyze the following text to determine if it was generated by an AI. Provide a probability score from 0 to 100 representing the likelihood of AI generation. Also, identify the specific sentences that most strongly suggest AI authorship.
    
    Text to analyze:
    ---
    ${text}
    ---
    `;

    try {
        const response = await ai.models.generateContent({
            model,
            contents: prompt,
            config: {
                responseMimeType: "application/json",
                responseSchema: aiDetectionSchema,
            },
        });
        const jsonStr = response.text.trim();
        return JSON.parse(jsonStr) as AiDetectionResult;
    } catch (error) {
        console.error("Error detecting AI content:", error);
        throw new Error("Failed to analyze text for AI content. The model may have returned an invalid format.");
    }
};


export const writeEssay = async (topic: string, tone: EssayTone, length: EssayLength): Promise<string> => {
    const prompt = `You are a skilled essayist. Write a high-quality, ${tone.toLowerCase()} essay on the following topic. The essay should be approximately ${length}.
    
    Topic: "${topic}"
    
    Please begin the essay now.`;

    try {
        const response = await ai.models.generateContent({
            model,
            contents: prompt,
        });
        return response.text;
    } catch (error) {
        console.error("Error writing essay:", error);
        throw new Error("Failed to generate essay. Please check the console for details.");
    }
};

export const summarizeText = async (text: string, length: SummaryLength): Promise<string> => {
    const prompt = `You are an expert in summarization. Provide ${length} summary of the following text.
    
    Original Text:
    ---
    ${text}
    ---
    
    Summary:`;
    
    try {
        const response = await ai.models.generateContent({
            model,
            contents: prompt,
        });
        return response.text;
    } catch (error) {
        console.error("Error summarizing text:", error);
        throw new Error("Failed to summarize text. Please check the console for details.");
    }
};
